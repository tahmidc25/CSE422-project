# -*- coding: utf-8 -*-
"""422_4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IYnRgsJGrf_Xt99YIEbRjC6OlaLCFwVw
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder,StandardScaler
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report,roc_auc_score,roc_curve,confusion_matrix

data = pd.read_csv('Heart Disease.csv')
gender_encoder = LabelEncoder()
data['gender'] = gender_encoder.fit_transform(data['gender'])
data.fillna(data.mean(),inplace = True)
features = data.drop('Heart Disease (in next 10 years)',axis = 1)
target = data['Heart Disease (in next 10 years)']
scaler = StandardScaler()
f_scaled = scaler.fit_transform(features)
x_train,x_test,y_train,y_test = train_test_split(f_scaled,target,test_size = 0.3,random_state = 42)
classifier = RandomForestClassifier(random_state = 42)
classifier.fit(x_train,y_train)
predicted_labels = classifier.predict(x_test)
predicted_prob = classifier.predict_proba(x_test)[:,1]
print("\nClassification Report:")
print(classification_report(y_test,predicted_labels))

conf_matrix = confusion_matrix(y_test,predicted_labels)
sns.heatmap(conf_matrix,annot = True,fmt = 'd',cmap = 'Blues')
plt.title('Confusion Matrix')
plt.xlabel('Predicted')
plt.ylabel('Actual')
plt.show()

fpr,tpr,thresholds = roc_curve(y_test,predicted_prob)
plt.plot(fpr,tpr,label = 'ROC Curve (area = {:.2f})'.format(roc_auc_score(y_test,predicted_prob)))
plt.plot([0,1],[0,1],linestyle = '--',color = 'gray')
plt.xlabel('False Positive Rate')
plt.ylabel('True Positive Rate')
plt.title('Receiver Operating Characteristic (ROC) Curve')
plt.legend()
plt.show()

roc_auc = roc_auc_score(y_test,predicted_prob)
print("\nROC AUC Score:",roc_auc)